{"code":"from manim import *\n\nclass CreationExamples(Scene):\n    def construct(self):\n        # Basic creation\n        square = Square()\n        circle = Circle()\n        triangle = Triangle()\n        text = Text(\"Create\")\n        \n        # Create animations\n        self.play(Create(square))\n        self.play(Write(text))\n        self.play(DrawBorderThenFill(triangle))\n        self.wait()\n        self.clear()\n\n        # Different lag_ratios\n        dots = VGroup(*[Dot() for _ in range(4)]).arrange(RIGHT)\n        self.play(Create(dots), lag_ratio=0.5)\n        self.play(dots.animate.shift(UP), lag_ratio=1.0)","language":"python","source_url":"https://docs.manim.community/en/stable/tutorials/quickstart.html","category":"Basic Animations"}\n\n{"code":"from manim import *\n\nclass TransformExamples(Scene):\n    def construct(self):\n        # Transform and MoveToTarget\n        square = Square()\n        circle = Circle()\n        circle.generate_target()\n        circle.target.shift(RIGHT * 2)\n        \n        self.play(Transform(square, circle))\n        self.play(MoveToTarget(circle))\n        self.wait()\n        self.clear()\n        \n        # Rotate and MoveAlongPath\n        dot = Dot()\n        path = Circle(radius=2)\n        self.play(Rotate(dot, angle=TAU, about_point=ORIGIN))\n        self.play(MoveAlongPath(dot, path))","language":"python","source_url":"https://docs.manim.community/en/stable/reference/manim.animation.transform.html","category":"Transform & Moving"}\n\n{"code":"from manim import *\n\nclass FadingAndGrowingExamples(Scene):\n    def construct(self):\n        # Fading examples\n        text1 = Text(\"Fade In\")\n        text2 = Text(\"Fade Out\")\n        self.play(FadeIn(text1))\n        self.play(FadeTransform(text1, text2))\n        self.play(FadeOut(text2))\n        self.wait()\n        self.clear()\n        \n        # Growing examples\n        circle = Circle()\n        self.play(GrowFromCenter(circle))\n        self.play(circle.animate.scale(0.3))\n        self.play(ShrinkToCenter(circle))","language":"python","source_url":"https://docs.manim.community/en/stable/reference/manim.animation.fading.html","category":"Fading & Growing"}\n\n{"code":"from manim import *\n\nclass IndicationExamples(Scene):\n    def construct(self):\n        # Different indications\n        text = Text(\"Important!\")\n        circle = Circle()\n        dot = Dot()\n        \n        self.play(Write(text))\n        self.play(Indicate(text))\n        self.play(Circumscribe(text))\n        self.play(FocusOn(dot))\n        self.play(ApplyWave(circle))\n        self.wait()","language":"python","source_url":"https://docs.manim.community/en/stable/reference/manim.animation.indication.html","category":"Indication & Effects"}\n\n{"code":"from manim import *\n\nclass CompositionExamples(Scene):\n    def construct(self):\n        # AnimationGroup and LaggedStart\n        squares = VGroup(*[Square() for _ in range(3)]).arrange(RIGHT)\n        animations = [Create(square) for square in squares]\n        \n        self.play(AnimationGroup(*animations))\n        self.play(LaggedStart(\n            *[square.animate.shift(UP) for square in squares],\n            lag_ratio=0.5\n        ))\n        self.wait()\n        self.clear()\n        \n        # ChangeSpeed example\n        dot = Dot()\n        self.play(\n            ChangeSpeed(\n                dot.animate.shift(RIGHT * 4),\n                speedinfo={0: 0.1, 0.5: 1, 1: 0.1}\n            )\n        )","language":"python","source_url":"https://docs.manim.community/en/stable/reference/manim.animation.composition.html","category":"Composition & Control"}\n\n{"code":"from manim import *\n\nclass SpecializedExamples(Scene):\n    def construct(self):\n        # ChangingDecimal\n        number = DecimalNumber(0)\n        self.play(ChangingDecimal(\n            number,\n            lambda t: t * 10,\n            run_time=3,\n            rate_func=linear\n        ))\n        self.wait()\n        self.clear()\n        \n        # TracedPath\n        dot = Dot()\n        path = Circle(radius=2)\n        trace = TracedPath(dot.get_center)\n        self.add(trace, dot)\n        self.play(\n            MoveAlongPath(dot, path),\n            rate_func=linear\n        )","language":"python","source_url":"https://docs.manim.community/en/stable/reference/manim.animation.specialized.html","category":"Specialized"}\n\n{"code":"from manim import *\n\nclass UpdatingExamples(Scene):\n    def construct(self):\n        # Basic updater\n        dot = Dot()\n        text = Text(\"Follow\").next_to(dot, UP)\n        text.add_updater(lambda m: m.next_to(dot, UP))\n        \n        self.add(dot, text)\n        self.play(dot.animate.shift(RIGHT * 2))\n        self.play(dot.animate.shift(UP * 2))\n        self.wait()\n        \n        # Remove updater\n        text.clear_updaters()\n        self.play(dot.animate.shift(LEFT * 2))\n        self.wait()","language":"python","source_url":"https://docs.manim.community/en/stable/reference/manim.animation.updaters.html","category":"Updaters & Advanced"}